$date
	Mon Nov  8 13:26:43 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Processor_32bit_test $end
$var wire 32 ! rd_data [31:0] $end
$var reg 1 " clk $end
$var reg 32 # ins [31:0] $end
$var reg 1 $ rst $end
$scope module P1 $end
$var wire 1 " clk $end
$var wire 32 % ins [31:0] $end
$var wire 1 $ rst $end
$var wire 1 & w_e $end
$var wire 1 ' s_i $end
$var wire 32 ( rs2_data [31:0] $end
$var wire 6 ) rs2_addr [5:0] $end
$var wire 32 * rs1_data [31:0] $end
$var wire 6 + rs1_addr [5:0] $end
$var wire 32 , rd_data [31:0] $end
$var wire 6 - rd_addr [5:0] $end
$var wire 1 . r_e $end
$var wire 3 / opcode [2:0] $end
$scope module A1 $end
$var wire 1 ' s_i $end
$var wire 32 0 rs2_data [31:0] $end
$var wire 32 1 rs1_data [31:0] $end
$var wire 3 2 opcode [2:0] $end
$var reg 32 3 rd_data [31:0] $end
$var reg 32 4 temp [31:0] $end
$upscope $end
$scope module C1 $end
$var wire 1 " clk $end
$var wire 1 $ rst $end
$var reg 1 5 S $end
$var reg 1 . r_e $end
$var reg 1 & w_e $end
$upscope $end
$scope module D1 $end
$var wire 32 6 ins [31:0] $end
$var reg 3 7 fun [2:0] $end
$var reg 6 8 rd_addr [5:0] $end
$var reg 6 9 rs1_addr [5:0] $end
$var reg 6 : rs2_addr [5:0] $end
$var reg 1 ' s_i $end
$upscope $end
$scope module R1 $end
$var wire 1 " clk $end
$var wire 1 . r_e $end
$var wire 6 ; rd_addr [5:0] $end
$var wire 32 < rd_data [31:0] $end
$var wire 6 = rs1_addr [5:0] $end
$var wire 6 > rs2_addr [5:0] $end
$var wire 1 & w_e $end
$var reg 32 ? rs1_data [31:0] $end
$var reg 32 @ rs2_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx @
bx ?
b0 >
b1 =
bx <
b10 ;
b0 :
b1 9
b10 8
b0 7
b1000000100110011 6
x5
bx 4
bx 3
b0 2
bx 1
bx 0
b0 /
x.
b10 -
bx ,
b1 +
bx *
b0 )
bx (
0'
x&
b1000000100110011 %
x$
b1000000100110011 #
0"
bx !
$end
#1
05
1$
#2
0$
#5
15
0&
1.
1"
#10
0"
#15
b11011 !
b11011 ,
b11011 3
b11011 <
05
1&
0.
b1111 (
b1111 0
b1111 @
b1100 *
b1100 1
b1100 ?
1"
#20
0"
#25
15
0&
1.
1"
#30
0"
#35
b11 !
b11 ,
b11 3
b11 <
05
1&
0.
b1100 (
b1100 0
b1100 @
b1111 *
b1111 1
b1111 ?
b11 -
b11 8
b11 ;
1'
1"
b1000000000000001000000110110011 #
b1000000000000001000000110110011 %
b1000000000000001000000110110011 6
#40
0"
#45
15
0&
1.
1"
#50
0"
#55
b11110000000000000000111111110000 !
b11110000000000000000111111110000 ,
b11110000000000000000111111110000 3
b11110000000000000000111111110000 <
05
1&
0.
b100 (
b100 0
b100 @
b11111111000000000000000011111111 *
b11111111000000000000000011111111 1
b11111111000000000000000011111111 ?
b1 /
b1 2
b1 7
b10 -
b10 8
b10 ;
0'
1"
b1001000100110011 #
b1001000100110011 %
b1001000100110011 6
#60
0"
#65
15
0&
1.
1"
#70
0"
#75
b0 !
b0 ,
b0 3
b0 <
05
1&
0.
b11110000000000000000000000000000 (
b11110000000000000000000000000000 0
b11110000000000000000000000000000 @
b1110000000000000000000000000000 *
b1110000000000000000000000000000 1
b1110000000000000000000000000000 ?
b10 /
b10 2
b10 7
1"
b1010000100110011 #
b1010000100110011 %
b1010000100110011 6
#80
0"
#85
15
0&
1.
1"
#90
0"
#95
b1 !
b1 ,
b1 3
b1 <
05
1&
0.
b11 /
b11 2
b11 7
1"
b1011000100110011 #
b1011000100110011 %
b1011000100110011 6
#100
0"
#105
15
0&
1.
1"
#110
0"
#115
b11 !
b11 ,
b11 3
b11 <
05
1&
0.
b1100 (
b1100 0
b1100 @
b1111 *
b1111 1
b1111 ?
b100 /
b100 2
b100 7
1"
b1100000100110011 #
b1100000100110011 %
b1100000100110011 6
#120
0"
#125
15
0&
1.
1"
#130
0"
#135
b1111111100000000000000001111 !
b1111111100000000000000001111 ,
b1111111100000000000000001111 3
b1111111100000000000000001111 <
05
1&
0.
b100 (
b100 0
b100 @
b11111111000000000000000011111111 *
b11111111000000000000000011111111 1
b11111111000000000000000011111111 ?
b101 /
b101 2
b101 7
1"
b1101000100110011 #
b1101000100110011 %
b1101000100110011 6
#140
0"
#145
15
0&
1.
1"
#150
0"
#155
b11111111111100000000000000001111 !
b11111111111100000000000000001111 ,
b11111111111100000000000000001111 3
b11111111111100000000000000001111 <
b11110000000000000000000000000000 4
05
1&
0.
1'
1"
b1000000000000001101000100110011 #
b1000000000000001101000100110011 %
b1000000000000001101000100110011 6
#160
0"
#165
15
0&
1.
1"
#170
0"
#175
b1111 !
b1111 ,
b1111 3
b1111 <
05
1&
0.
b1100 (
b1100 0
b1100 @
b1111 *
b1111 1
b1111 ?
b110 /
b110 2
b110 7
0'
1"
b1110000100110011 #
b1110000100110011 %
b1110000100110011 6
#180
0"
#185
15
0&
1.
1"
#190
0"
#195
b1100 !
b1100 ,
b1100 3
b1100 <
05
1&
0.
b111 /
b111 2
b111 7
1"
b1111000100110011 #
b1111000100110011 %
b1111000100110011 6
#200
0"
#205
15
0&
1.
1"
#210
0"
#215
05
1&
0.
1"
#220
0"
#225
15
0&
1.
1"
#230
0"
#235
05
1&
0.
1"
#240
0"
#245
15
0&
1.
1"
